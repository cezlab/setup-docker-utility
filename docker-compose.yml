version: "3.7"

services:
  database:
    container_name: database_service
    image: mariadb:10.4
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_DB}
    ports:
      - 3306:3306
    volumes:
      - '.docker/mysql.cnf:/etc/mysql/conf.d/docker.cnf'
    networks:
      docker-network:
        ipv4_address: 172.28.0.2

  phpmyadmin:
    container_name: phpmyadmin_service
    image: phpmyadmin/phpmyadmin
    depends_on:
      - database
    links:
      - database
    ports:
      - 9090:80
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      PMA_HOST: database
      UPLOAD_LIMIT: '300M'
      MAX_EXECUTION_TIME: '-1'
      MEMORY_LIMIT: '-1'
    networks:
      docker-network:
        ipv4_address: 172.28.0.3

  mailhog:
    container_name: mailhog_service
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      docker-network:
        ipv4_address: 172.28.0.5

  redis:
    container_name: redis_service
    image: redis
    ports:
      - 6379:6379
    restart: unless-stopped
    networks:
      docker-network:
        ipv4_address: 172.28.0.6

  php-fpm:
    container_name: php_fpm_service
    image: cezlab/php-8.2-fpm
    depends_on:
      - database
    links:
      - database
    ports:
      - 9082:9000
    restart: unless-stopped
    volumes:
      - './wwwroot:/var/www/html/wwwroot'
      - '.docker/php.ini:/usr/local/etc/php/php.ini'
    networks:
      docker-network:
        ipv4_address: 172.28.0.7

  web_service:
    container_name: web_service
    image: nginx:latest
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    depends_on:
      - php-fpm
    links:
      - php-fpm
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - './wwwroot:/var/www/html/wwwroot'
      - '.docker/nginx.conf:/etc/nginx/conf.d/default.conf'
    networks:
      docker-network:
        ipv4_address: 172.28.0.8

  opensearch:
    container_name: opensearch_service
    image: opensearchproject/opensearch:latest
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node # Name the node that will run in this container
      - discovery.type=single-node
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - DISABLE_SECURITY_PLUGIN=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    ports:
      - 9200:9200
      - 9600:9600 # required for Performance Analyzer
    networks:
      docker-network:
        ipv4_address: 172.28.0.9

  dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch_dashboards_service
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
    depends_on:
      - opensearch
    networks:
      docker-network:
        ipv4_address: 172.28.0.10

volumes:
  postgres-data:
  pgadmin-data:
networks:
  docker-network:
    name: docker-server-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
